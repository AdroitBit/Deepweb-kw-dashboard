version: '3.4'

networks:
  my_network:
    driver: bridge

services:

  tor_proxy:
    container_name: tor_proxy
    # restart: always
    image: dperson/torproxy
    networks:
      - my_network
    ports:
      - "9050:12139"
      - "9053:9053"
      - "9051:9051"
  deepweb_puller:
    container_name: deepweb_puller
    build:
      context: ./apps/deepweb_puller
      dockerfile: Dockerfile
    # restart: 'always'
    networks:
      - my_network
  
  server_api:
    container_name: server_api
    build:
      context: ./apps/server_api
      dockerfile: Dockerfile
    # restart: 'on-failure'
    ports:
      - '5000:5000'
    networks:
      - my_network

  antd_deepweb_dashboard:
    container_name: antd_deepweb_dashboard
    build:
      context: ./apps/antd_deepweb_dashboard
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    networks:
      - my_network
  
  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./data:/data/db


  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   # restart: always
  #   volumes:
  #     - ./apps/server-api/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - '9090:9090'
  #   networks:
  #     - my_network

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:10.4.2
  #   ports:
  #     - "6969:3000"
  #   environment:
  #     - GF_AUTH_BASIC_ENABLED=false
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   ports:
  #     - "8086:8086"  # InfluxDB HTTP API port
  #   environment:
  #     - INFLUXDB_DB=mydb  # Replace 'mydb' with your desired database name
  #     - INFLUXDB_USER=myuser  # Replace 'myuser' with your desired username
  #     - INFLUXDB_USER_PASSWORD=mypassword  # Replace 'mypassword' with your desired password
  #   volumes:
  #     - influxdb_data:/var/lib/influxdb  # Volume for InfluxDB data
  # grafana_dashboards:
  #   container_name: grafana_dashboards
  #   image: alpine:3.10
  #   depends_on:
  #     - grafana
  #   volumes:
  #     - ./grafana-data:/grafana
  #   command: >
  #     /bin/sh -c "
  #       apk add --no-cache curl
  #       echo 'waiting for grafana'
  #       sleep 20s
  #       cd /grafana
  #       # curl --request POST http://grafana:6969/api/datasources --header 'Content-Type: application/json' -d @datasources.json
  #       curl --request POST http://grafana:6969/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"


volumes:
  influxdb_data:
    driver: local